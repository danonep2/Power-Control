name: Deploy Docker to VPS

on:
  push:
    branches:
      - main  # Ou a branch que você usa para deploy
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Etapa para fazer checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Etapa para fazer login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Etapa para construir e empurrar a imagem Docker
      - name: Build and push Docker image
        run: |
          # Cria a imagem Docker com a tag baseada no SHA do commit
          docker build -t iagoamorimp2/power-control:${{ github.sha }} .
          # Empurra a imagem para o Docker Hub
          docker push iagoamorimp2/power-control:${{ github.sha }}

      # Etapa para deploy no VPS usando SSH
      - name: Deploy to VPS using SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            # Verifica a variável ${GITHUB_SHA}
            echo "GitHub SHA: ${{ github.sha }}"
            
            # Puxa a imagem mais recente do Docker Hub com o SHA do commit
            docker pull iagoamorimp2/power-control:${{ github.sha }}

            # Para e remove o contêiner antigo, se existir
            docker stop power-control || true
            docker rm power-control || true

            docker network create iagonetwork

            docker run -d \
              --name postgres \
              --restart always \
              -e POSTGRES_USER=${{ secrets.PG_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.PG_PASSWORD }} \
              -e POSTGRES_DB=postgres \
              -e POSTGRES_PORT=5432 \
              -e POSTGRES_HOST_AUTH_METHOD=trust \
              -p 5432:5432 \
              -v pg_data:/var/lib/postgresql/data \
              -v $(pwd)/postgresql.conf:/etc/postgresql/postgresql.conf \
              -v $(pwd)/pg_hba.conf:/etc/postgresql/pg_hba.conf \
              --network iagonetwork \
              postgres:14.1-alpine

            # Executa o novo contêiner com as variáveis de ambiente necessárias
            docker run -d -p 80:80 -p 1883:1883 -p 8085:8085 --name power-control \
              -e PG_USER=${{ secrets.PG_USER }} \
              -e PG_HOST=${{ secrets.PG_HOST }} \
              -e PG_DATABASE=${{ secrets.PG_DB }} \
              -e PG_PASSWORD=${{ secrets.PG_PASSWORD }} \
              -e PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }} \
              -e PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }} \
              -e ADMIN_USER=${{ secrets.ADMIN_USER }} \
              -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
              --network iagonetwork \
              iagoamorimp2/power-control:${{ github.sha }}
